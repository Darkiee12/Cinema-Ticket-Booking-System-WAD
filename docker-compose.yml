services:
  postgres:
    image: postgres:15.3
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      # - postgresql:/var/lib/postgresql/data
    networks:
      - cinema_network

  backend:
    build:
      context: ./backend-go
      dockerfile: Dockerfile
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: redis
      POSTGRES_DB: ${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      - postgres
    networks:
      - cinema_network

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:5173"
    container_name: frontend
    working_dir: /home/bun/app
    volumes:
      - ./frontend:/home/bun/app
      - /home/bun/app/node_modules
    expose:
      - "5173"
    restart: on-failure
    depends_on:
      - backend
    networks:
      - cinema_network

  redis:
    image: bitnami/redis:latest
    container_name: redis
    ports:
      - 6379:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - redis:/bitnami/redis/data
    networks:
        - cinema_network

  netdata:
    image: netdata/netdata
    container_name: netdata
    pid: host
    network_mode: host
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/host/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
  
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/sites_enabled/cieu/nginx.conf
  #     - ./frontend:/usr/share/nginx/html
  #   networks:
  #     - cinema_network

volumes:
  postgresql:
  netdataconfig:
  netdatalib:
  netdatacache:
  redis:

networks:
  cinema_network:
    driver: bridge
